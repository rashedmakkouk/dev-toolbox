"use strict";(self.webpackChunk_rashedmakkouk_dev_toolbox=self.webpackChunk_rashedmakkouk_dev_toolbox||[]).push([[4998],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2781:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"Setup Https in Local Dev Env",sidebar_label:"Setup Https in Local Dev Env"},c=void 0,s={unversionedId:"how-to/devops/setup-https-in-local-dev-env",id:"how-to/devops/setup-https-in-local-dev-env",title:"Setup Https in Local Dev Env",description:"Ref.: How to get HTTPS working on your local development environment in 5 minutes",source:"@site/content/how-to/devops/setup-https-in-local-dev-env.md",sourceDirName:"how-to/devops",slug:"/how-to/devops/setup-https-in-local-dev-env",permalink:"/dev-toolbox/how-to/devops/setup-https-in-local-dev-env",draft:!1,editUrl:"https://github.com/rashedmakkouk/dev-toolbox/edit/main/content/how-to/devops/setup-https-in-local-dev-env.md",tags:[],version:"current",lastUpdatedBy:"Rashed Makkouk",lastUpdatedAt:1654713829,formattedLastUpdatedAt:"6/8/2022",frontMatter:{title:"Setup Https in Local Dev Env",sidebar_label:"Setup Https in Local Dev Env"},sidebar:"sidebar",previous:{title:"Generate SSL Certificate",permalink:"/dev-toolbox/how-to/devops/generate-ssl-certificate"},next:{title:"Setup Nginx Server",permalink:"/dev-toolbox/how-to/devops/setup-nginx-server"}},p={},u=[{value:"Install <code>OpenSSL</code>",id:"install-openssl",level:2},{value:"Create root SSL certificate",id:"create-root-ssl-certificate",level:2},{value:"Trust root SSL certificate",id:"trust-root-ssl-certificate",level:2},{value:"Create domain SSL certificate",id:"create-domain-ssl-certificate",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Ref.: ",(0,o.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/how-to-get-https-working-on-your-local-development-environment-in-5-minutes-7af615770eec"},"How to get HTTPS working on your local development environment in 5 minutes"))),(0,o.kt)("h2",{id:"install-openssl"},"Install ",(0,o.kt)("inlineCode",{parentName:"h2"},"OpenSSL")),(0,o.kt)("p",null,"Download and install ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.openssl.org/index.php/Binaries"},"OpenSSL binaries")),(0,o.kt)("h2",{id:"create-root-ssl-certificate"},"Create root SSL certificate"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Generate root key")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Root keys are used to create root certificates.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"openssl genrsa -des3 -out rootCA.key 2048\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Remove ",(0,o.kt)("inlineCode",{parentName:"p"},"-des3")," for non password-protected keys.")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create root SSL certificate")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Root certificates are used to sign individual domains' certificates.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1024 -out rootCA.pem\n")),(0,o.kt)("h2",{id:"trust-root-ssl-certificate"},"Trust root SSL certificate"),(0,o.kt)("p",null,"Configure the operating system to trust the root certificate and all signed certificates."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Windows")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"mmc.exe")," from command prompt."),(0,o.kt)("li",{parentName:"ul"},"File -> Add/Remove Snap-in."),(0,o.kt)("li",{parentName:"ul"},"Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Certificates")," under ",(0,o.kt)("inlineCode",{parentName:"li"},"Available snap-ins")," and click ",(0,o.kt)("inlineCode",{parentName:"li"},"Add"),"; click ",(0,o.kt)("inlineCode",{parentName:"li"},"Next"),"."),(0,o.kt)("li",{parentName:"ul"},"Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Computer account"),"; click ",(0,o.kt)("inlineCode",{parentName:"li"},"Next"),"."),(0,o.kt)("li",{parentName:"ul"},"Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Local computer"),"; click ",(0,o.kt)("inlineCode",{parentName:"li"},"Finish"),"."),(0,o.kt)("li",{parentName:"ul"},"In ",(0,o.kt)("inlineCode",{parentName:"li"},"MMC")," console, expand ",(0,o.kt)("inlineCode",{parentName:"li"},"Certificates (Local computer)")," node."),(0,o.kt)("li",{parentName:"ul"},"Right click on ",(0,o.kt)("inlineCode",{parentName:"li"},"Trusted Root Certification Authorities")," and click on ",(0,o.kt)("inlineCode",{parentName:"li"},"All Tasks")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"Import"),"."),(0,o.kt)("li",{parentName:"ul"},"Follow the wizard instructions to complete the process.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"macOS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Keychain Access")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"Certificates"),"."),(0,o.kt)("li",{parentName:"ul"},"File -> Import Items -> ",(0,o.kt)("inlineCode",{parentName:"li"},"rootCA.pem"),"."),(0,o.kt)("li",{parentName:"ul"},"Double click on the imported certificate: Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Always Trust")," under ",(0,o.kt)("inlineCode",{parentName:"li"},"When using this certificate:")," dropdown -> ",(0,o.kt)("inlineCode",{parentName:"li"},"Trust")," section.")),(0,o.kt)("h2",{id:"create-domain-ssl-certificate"},"Create domain SSL certificate"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new ",(0,o.kt)("inlineCode",{parentName:"li"},"OpenSSL")," configuration file ",(0,o.kt)("inlineCode",{parentName:"li"},"server.csr.cnf"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Configuration files can be used to load stored settings when signing new certificates; can also be done via the command line.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-telnet"},"[req]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\ndistinguished_name = dn\n\n[dn]\nC=US\nST=RandomState\nL=RandomCity\nO=RandomOrganization\nOU=RandomOrganizationUnit\nemailAddress=hello@example.com\nCN = localhost\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create a ",(0,o.kt)("inlineCode",{parentName:"li"},"v3.ext")," file in order to create a ",(0,o.kt)("inlineCode",{parentName:"li"},"X509 v3")," certificate")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ascii"},"authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create a certificate key for localhost")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"openssl req -new -sha256 -nodes -out server.csr -newkey rsa:2048 -keyout server.key -config <( cat server.csr.cnf )\n")),(0,o.kt)("p",null,"A certificate signing request is issued via the root SSL certificate created earlier to create a domain certificate for ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost"),"."),(0,o.kt)("p",null,"The output is a certificate file called ",(0,o.kt)("inlineCode",{parentName:"p"},"server.crt"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 500 -sha256 -extfile v3.ext\n")),(0,o.kt)("p",null,"Output files used to load i Node.js server:\nserver.key\nserver.crt"))}m.isMDXComponent=!0}}]);